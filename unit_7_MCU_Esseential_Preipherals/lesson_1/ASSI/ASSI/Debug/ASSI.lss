
ASSI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000288  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000050  00000000  00000000  000002b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000835  00000000  00000000  00000307  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000055a  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002e5  00000000  00000000  00001096  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000f4  00000000  00000000  0000137c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000196  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001aa  00000000  00000000  00001606  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000230  00000230  00000284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    0000001e  00000212  00000212  00000266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.INIT_GPIO 00000058  0000006c  0000006c  000000c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LED_1   00000044  000000c4  000000c4  00000118  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LED_2   00000044  00000108  00000108  0000015c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LED_3   00000044  0000014c  0000014c  000001a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.BUZZER  00000044  00000190  00000190  000001e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.MY_DELAY 0000003e  000001d4  000001d4  00000228  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
   8:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
   c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  10:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  14:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  18:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  1c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  20:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  24:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  28:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  2c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  30:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  34:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  38:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  3c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  40:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  44:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  48:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  4c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  50:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 09 01 	call	0x212	; 0x212 <main>
  64:	0c 94 34 00 	jmp	0x68	; 0x68 <_exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000230 <__bad_interrupt>:
 230:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000212 <main>:
void BUZZER(void);
void MY_DELAY(int t);


int main(void)
{
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
	INIT_GPIO();
 21a:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
    while(1)
    {
        LED_1();
 21e:	0e 94 62 00 	call	0xc4	; 0xc4 <LED_1>
		LED_2();
 222:	0e 94 84 00 	call	0x108	; 0x108 <LED_2>
		LED_3();		 
 226:	0e 94 a6 00 	call	0x14c	; 0x14c <LED_3>
		BUZZER();
 22a:	0e 94 c8 00 	call	0x190	; 0x190 <BUZZER>
    }
 22e:	f7 cf       	rjmp	.-18     	; 0x21e <main+0xc>

Disassembly of section .text.INIT_GPIO:

0000006c <INIT_GPIO>:
}


void INIT_GPIO(void)
{
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(DDRD,4);//buzzer
  74:	81 e3       	ldi	r24, 0x31	; 49
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	21 e3       	ldi	r18, 0x31	; 49
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	f9 01       	movw	r30, r18
  7e:	20 81       	ld	r18, Z
  80:	20 61       	ori	r18, 0x10	; 16
  82:	fc 01       	movw	r30, r24
  84:	20 83       	st	Z, r18
	SET_BIT(DDRD,5);//led 1
  86:	81 e3       	ldi	r24, 0x31	; 49
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	21 e3       	ldi	r18, 0x31	; 49
  8c:	30 e0       	ldi	r19, 0x00	; 0
  8e:	f9 01       	movw	r30, r18
  90:	20 81       	ld	r18, Z
  92:	20 62       	ori	r18, 0x20	; 32
  94:	fc 01       	movw	r30, r24
  96:	20 83       	st	Z, r18
    SET_BIT(DDRD,6);//led 2
  98:	81 e3       	ldi	r24, 0x31	; 49
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	21 e3       	ldi	r18, 0x31	; 49
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	f9 01       	movw	r30, r18
  a2:	20 81       	ld	r18, Z
  a4:	20 64       	ori	r18, 0x40	; 64
  a6:	fc 01       	movw	r30, r24
  a8:	20 83       	st	Z, r18
	SET_BIT(DDRD,7);//led 3
  aa:	81 e3       	ldi	r24, 0x31	; 49
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	21 e3       	ldi	r18, 0x31	; 49
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	f9 01       	movw	r30, r18
  b4:	20 81       	ld	r18, Z
  b6:	20 68       	ori	r18, 0x80	; 128
  b8:	fc 01       	movw	r30, r24
  ba:	20 83       	st	Z, r18
}
  bc:	00 00       	nop
  be:	df 91       	pop	r29
  c0:	cf 91       	pop	r28
  c2:	08 95       	ret

Disassembly of section .text.LED_1:

000000c4 <LED_1>:

void LED_1(void)
{
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(PORTD,5);
  cc:	82 e3       	ldi	r24, 0x32	; 50
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	22 e3       	ldi	r18, 0x32	; 50
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	f9 01       	movw	r30, r18
  d6:	20 81       	ld	r18, Z
  d8:	20 62       	ori	r18, 0x20	; 32
  da:	fc 01       	movw	r30, r24
  dc:	20 83       	st	Z, r18
	MY_DELAY(10000);
  de:	80 e1       	ldi	r24, 0x10	; 16
  e0:	97 e2       	ldi	r25, 0x27	; 39
  e2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
	RESET_BIT(PORTD,5);
  e6:	82 e3       	ldi	r24, 0x32	; 50
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	22 e3       	ldi	r18, 0x32	; 50
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	f9 01       	movw	r30, r18
  f0:	20 81       	ld	r18, Z
  f2:	2f 7d       	andi	r18, 0xDF	; 223
  f4:	fc 01       	movw	r30, r24
  f6:	20 83       	st	Z, r18
	MY_DELAY(2000);
  f8:	80 ed       	ldi	r24, 0xD0	; 208
  fa:	97 e0       	ldi	r25, 0x07	; 7
  fc:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
}
 100:	00 00       	nop
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

Disassembly of section .text.LED_2:

00000108 <LED_2>:

void LED_2(void)
{
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(PORTD,6);
 110:	82 e3       	ldi	r24, 0x32	; 50
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	22 e3       	ldi	r18, 0x32	; 50
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	f9 01       	movw	r30, r18
 11a:	20 81       	ld	r18, Z
 11c:	20 64       	ori	r18, 0x40	; 64
 11e:	fc 01       	movw	r30, r24
 120:	20 83       	st	Z, r18
	MY_DELAY(10000);
 122:	80 e1       	ldi	r24, 0x10	; 16
 124:	97 e2       	ldi	r25, 0x27	; 39
 126:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
	RESET_BIT(PORTD,6);
 12a:	82 e3       	ldi	r24, 0x32	; 50
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	22 e3       	ldi	r18, 0x32	; 50
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	f9 01       	movw	r30, r18
 134:	20 81       	ld	r18, Z
 136:	2f 7b       	andi	r18, 0xBF	; 191
 138:	fc 01       	movw	r30, r24
 13a:	20 83       	st	Z, r18
    MY_DELAY(2000);
 13c:	80 ed       	ldi	r24, 0xD0	; 208
 13e:	97 e0       	ldi	r25, 0x07	; 7
 140:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
}
 144:	00 00       	nop
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

Disassembly of section .text.LED_3:

0000014c <LED_3>:

void LED_3(void)
{
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(PORTD,7);
 154:	82 e3       	ldi	r24, 0x32	; 50
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	22 e3       	ldi	r18, 0x32	; 50
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	f9 01       	movw	r30, r18
 15e:	20 81       	ld	r18, Z
 160:	20 68       	ori	r18, 0x80	; 128
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18
	MY_DELAY(10000);
 166:	80 e1       	ldi	r24, 0x10	; 16
 168:	97 e2       	ldi	r25, 0x27	; 39
 16a:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
	RESET_BIT(PORTD,7);
 16e:	82 e3       	ldi	r24, 0x32	; 50
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	22 e3       	ldi	r18, 0x32	; 50
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	f9 01       	movw	r30, r18
 178:	20 81       	ld	r18, Z
 17a:	2f 77       	andi	r18, 0x7F	; 127
 17c:	fc 01       	movw	r30, r24
 17e:	20 83       	st	Z, r18
    MY_DELAY(2000);
 180:	80 ed       	ldi	r24, 0xD0	; 208
 182:	97 e0       	ldi	r25, 0x07	; 7
 184:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
}
 188:	00 00       	nop
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

Disassembly of section .text.BUZZER:

00000190 <BUZZER>:

void BUZZER(void)
{
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(PORTD,4);
 198:	82 e3       	ldi	r24, 0x32	; 50
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	22 e3       	ldi	r18, 0x32	; 50
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	f9 01       	movw	r30, r18
 1a2:	20 81       	ld	r18, Z
 1a4:	20 61       	ori	r18, 0x10	; 16
 1a6:	fc 01       	movw	r30, r24
 1a8:	20 83       	st	Z, r18
	MY_DELAY(10000);
 1aa:	80 e1       	ldi	r24, 0x10	; 16
 1ac:	97 e2       	ldi	r25, 0x27	; 39
 1ae:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
	RESET_BIT(PORTD,4);
 1b2:	82 e3       	ldi	r24, 0x32	; 50
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	22 e3       	ldi	r18, 0x32	; 50
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	f9 01       	movw	r30, r18
 1bc:	20 81       	ld	r18, Z
 1be:	2f 7e       	andi	r18, 0xEF	; 239
 1c0:	fc 01       	movw	r30, r24
 1c2:	20 83       	st	Z, r18
	MY_DELAY(2000);
 1c4:	80 ed       	ldi	r24, 0xD0	; 208
 1c6:	97 e0       	ldi	r25, 0x07	; 7
 1c8:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <MY_DELAY>
}
 1cc:	00 00       	nop
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

Disassembly of section .text.MY_DELAY:

000001d4 <MY_DELAY>:

void MY_DELAY(int t)
{
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	00 d0       	rcall	.+0      	; 0x1da <MY_DELAY+0x6>
 1da:	00 d0       	rcall	.+0      	; 0x1dc <MY_DELAY+0x8>
 1dc:	cd b7       	in	r28, 0x3d	; 61
 1de:	de b7       	in	r29, 0x3e	; 62
 1e0:	9c 83       	std	Y+4, r25	; 0x04
 1e2:	8b 83       	std	Y+3, r24	; 0x03
	for(int i=0; i<t; i++);
 1e4:	1a 82       	std	Y+2, r1	; 0x02
 1e6:	19 82       	std	Y+1, r1	; 0x01
 1e8:	05 c0       	rjmp	.+10     	; 0x1f4 <MY_DELAY+0x20>
 1ea:	89 81       	ldd	r24, Y+1	; 0x01
 1ec:	9a 81       	ldd	r25, Y+2	; 0x02
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	9a 83       	std	Y+2, r25	; 0x02
 1f2:	89 83       	std	Y+1, r24	; 0x01
 1f4:	29 81       	ldd	r18, Y+1	; 0x01
 1f6:	3a 81       	ldd	r19, Y+2	; 0x02
 1f8:	8b 81       	ldd	r24, Y+3	; 0x03
 1fa:	9c 81       	ldd	r25, Y+4	; 0x04
 1fc:	28 17       	cp	r18, r24
 1fe:	39 07       	cpc	r19, r25
 200:	a4 f3       	brlt	.-24     	; 0x1ea <MY_DELAY+0x16>
}
 202:	00 00       	nop
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	08 95       	ret
